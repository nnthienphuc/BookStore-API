@page "/admin/changePassword"
@using System.Text.Json;

@using BookStoreWebAppFE.Models
@inject HttpClient Http
@using DevExpress.Blazor
@rendermode InteractiveServer

<div class="d-flex align-items-center custom-toast-background">
    <DxToastProvider Name="Overview"
                     MaxToastCount="5"
                     AnimationType="ToastAnimationType.Slide"
                     HorizontalAlignment="HorizontalAlignment.Right"
                     VerticalAlignment="VerticalEdge.Top"
                     DisplayTime="TimeSpan.FromSeconds(5)"
                     Width="320px" />
</div>
<div class="mainDiv">
    <div class="cardStyle">
        <EditForm  OnSubmit="@OnSignUpClick" FormName="SignUpform" EditContext="editContext" >
            <DataAnnotationsValidator />
            <ValidationSummary />
            <img src="" id="signupLogo" />

            <h2 class="formTitle">
                Change your password
            </h2>

            <div class="inputDiv">
                <label class="inputLabel" for="password">Old Password</label>
                <InputText type="password" @bind-Value="@changePasswordModel.OldPassword"/>
            </div>
            <div class="inputDiv">
                <label class="inputLabel" for="password">New Password</label>
                <InputText type="password" @bind-Value="@changePasswordModel.NewPassword" />
            </div>

            <div class="inputDiv">
                <label class="inputLabel" for="confirmPassword">Confirm Password</label>
                <InputText type="password" @bind-Value="@changePasswordModel.ConfirmNewPassword" />
            </div>

            <div class="buttonWrapper">
                <button type="submit" id="submitButton" class="submitButton pure-button pure-button-primary">
                    <span>Submit</span>
                    <span id="loader"></span>
                </button>
            </div>

        </EditForm>
    </div>
</div>
<style>
    .mainDiv {
    display: flex;
    min-height: 100%;
    align-items: center;
    justify-content: center;
    background-color: #f9f9f9;
    font-family: 'Open Sans', sans-serif;
    }

    .cardStyle {
    width: 500px;
    border-color: white;
    background: #fff;
    padding: 36px 0;
    border-radius: 4px;
    margin: 30px 0;
    box-shadow: 0px 0 2px 0 rgba(0,0,0,0.25);
    }

    #signupLogo {
    max-height: 100px;
    margin: auto;
    display: flex;
    flex-direction: column;
    }

    .formTitle {
    font-weight: 600;
    margin-top: 20px;
    color: #2F2D3B;
    text-align: center;
    }

    .inputLabel {
    font-size: 12px;
    color: #555;
    margin-bottom: 6px;
    margin-top: 24px;
    }

    .inputDiv {
    width: 70%;
    display: flex;
    flex-direction: column;
    margin: auto;
    }

    input {
    height: 40px;
    font-size: 16px;
    border-radius: 4px;
    border: none;
    border: solid 1px #ccc;
    padding: 0 11px;
    }

    input:disabled {
    cursor: not-allowed;
    border: solid 1px #eee;
    }

    .buttonWrapper {
    margin-top: 40px;
    }

    .submitButton {
    width: 70%;
    height: 40px;
    margin: auto;
    display: block;
    color: #fff;
    background-color: rgb(6, 99, 100);
    border-color: rgb(6, 99, 100);
    text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.12);
    box-shadow: 0 2px 0 rgba(0, 0, 0, 0.035);
    border-radius: 4px;
    font-size: 14px;
    cursor: pointer;
    }

    .submitButton:disabled,
    button[disabled] {
    border: 1px solid #cccccc;
    background-color: #cccccc;
    color: #666666;
    }

    #loader {
    position: absolute;
    z-index: 1;
    margin: -2px 0 0 10px;
    border: 4px solid #f3f3f3;
    border-radius: 50%;
    border-top: 4px solid #666666;
    width: 14px;
    height: 14px;
    -webkit-animation: spin 2s linear infinite;
    animation: spin 2s linear infinite;
    }

    @@keyframes spin {
    0%

    {
    transform: rotate(0deg);
    }

    100% {
    transform: rotate(360deg);
    }

    }
</style>

@code {
    string urlGrid = "api/auth/change-password";

    private EditContext editContext;
    [SupplyParameterFromForm]
    public ChangePassword changePasswordModel { get; set; }
    [Inject] IToastNotificationService ToastService { get; set; }
    protected override void OnInitialized()
    {
        changePasswordModel ??= new ChangePassword();
        editContext = new EditContext(changePasswordModel);
    }
    async Task OnSignUpClick()
    {
        var response = await Http.PutAsJsonAsync(urlGrid, changePasswordModel);
        var result = await response.Content.ReadFromJsonAsync<ApiMessageResponse>();
        if (response.IsSuccessStatusCode)
        {
            // ✅ Đọc nội dung trả về từ API

            ToastService.ShowToast(new ToastOptions() // SUCCESS
                {
                    ProviderName = "Overview",
                    ThemeMode = ToastThemeMode.Saturated,
                    RenderStyle = ToastRenderStyle.Success,
                    Title = $"{result?.Message}",
                });
        }
        else
        {
            if (string.IsNullOrEmpty(result?.Message))
            {
                string errorContent = await response.Content.ReadAsStringAsync();
                string allErrors = "";

                using (JsonDocument doc = JsonDocument.Parse(errorContent))
                {
                    var errorsElement = doc.RootElement.GetProperty("errors");

                    foreach (var property in errorsElement.EnumerateObject())
                    {
                        foreach (var error in property.Value.EnumerateArray())
                        {
                            allErrors += error.GetString() + "\n";
                        }
                    }
                }
                result.Message = allErrors;

            }
            ToastService.ShowToast(new ToastOptions() //ERROR
                {
                    ProviderName = "Overview",
                    ThemeMode = ToastThemeMode.Saturated,
                    RenderStyle = ToastRenderStyle.Danger,
                    Title = $"{result?.Message}"
                });
        }

        StateHasChanged();
    }
    public class ApiMessageResponse
    {
        public string Message { get; set; }
    }
    public class ChangePassword
    {
        public  String OldPassword { get; set; }
        public  String NewPassword { get; set; }
        public  String ConfirmNewPassword { get; set; }
    }
}
